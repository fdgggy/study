自旋锁

共享资源访问冲突时采用：
1.原地等待
2.挂起当前进程，调度其他进程执行  （睡眠）

自旋锁则是原地等待的方式，当一个线程获取了一个自旋锁后，另一个线程期望获取该锁，获取不到只能够在原地等待，不停的获取。
基于此特性，自旋锁不应该被长时间持有，因为消耗cpu

linux 内核实现中，经常会碰到共享数据被中断上下文和进程上下文访问，如果只是进程访问，则可以用semaphore或mutex锁机制，但是
现在中断上下文也参与，中断上下文是不允许睡眠的。

固中断上下文需要用锁，首选spinlock

